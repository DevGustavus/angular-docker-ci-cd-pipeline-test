name: CI/CD Angular + Docker + Render

on:
  push:
    branches:
      - main # Executa somente em pushes na branch principal

jobs:
  # üß™ 1Ô∏è‚É£ Etapa de Testes Unit√°rios
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout c√≥digo fonte
        uses: actions/checkout@v4

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Instalar depend√™ncias
        run: npm ci

      - name: Executar testes unit√°rios
        run: npm test -- --watch=false --browsers=ChromeHeadless

  # üî¢ 2Ô∏è‚É£ Etapa de Verifica√ß√£o de Vers√£o
  version-check:
    name: Check Application Version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout c√≥digo fonte
        uses: actions/checkout@v4

      - name: Verificar vers√£o do package.json
        run: |
          git fetch origin main || true
          git show origin/main:package.json > last_package.json || echo '{}' > last_package.json
          CURRENT=$(jq -r '.version' package.json)
          LAST=$(jq -r '.version' last_package.json)
          if [ "$CURRENT" = "$LAST" ]; then
            echo "‚ùå A vers√£o n√£o mudou. Atualize o n√∫mero no package.json (atual: $CURRENT)."
            exit 1
          fi
          if [ "$(printf '%s\n' "$LAST" "$CURRENT" | sort -V | head -n1)" = "$CURRENT" ]; then
            echo "‚ùå Vers√£o atual ($CURRENT) n√£o √© maior que a anterior ($LAST)."
            exit 1
          fi
          echo "‚úÖ Vers√£o v√°lida: $CURRENT > $LAST"

  # üß± 3Ô∏è‚É£ Etapa de Build e Deploy com Docker + Render
  build-and-deploy:
    name: Build Angular & Deploy to Render
    runs-on: ubuntu-latest
    needs: [test, version-check] # s√≥ executa se os anteriores passarem

    steps:
      # 1Ô∏è‚É£ Faz checkout do c√≥digo
      - name: Checkout c√≥digo fonte
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Instala Node e depend√™ncias
      - name: Instalar Node.js e depend√™ncias
        uses: actions/setup-node@v4
        with:
          node-version: 22
      - run: npm ci

      # 3Ô∏è‚É£ Testa o build do Angular (garante que compila)
      - name: Testar build do Angular
        run: npm run build

      # 4Ô∏è‚É£ Valida o Dockerfile localmente
      - name: Validar Docker build (sem subir imagem)
        run: docker build -t angular-docker-test .

      # 5Ô∏è‚É£ Dispara o deploy no Render via Webhook
      - name: Disparar deploy no Render
        run: |
          curl -X POST "${{ secrets.RENDER_DEPLOY_HOOK_URL }}"
